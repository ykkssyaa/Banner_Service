services:

  postgres:
    image: postgres:16
    container_name: test_db
    restart: always

    environment:
      POSTGRES_DB: ${POSTGRES_DBNAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5434:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U yks" ]
      interval: 3s
      timeout: 5s
      retries: 5
    networks:
      test:
        aliases:
          - database

  migrate:
    image: migrate/migrate
    container_name: test_migrate
    volumes:
      - ./migrations:/migrations
    command: ["-path", "./migrations", "-database",  "postgres://yks:yksadm@database:5434/postgres?sslmode=disable", "up" ]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - test

  redis:
    image: redis:7.2
    container_name: test_redis
    restart: always
    ports:
      -  "6376:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DATABASES=1
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - test



networks:
  test: